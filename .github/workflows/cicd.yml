name: Build and Deploy

on:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/gsls_management_system:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Agent
        run : |
          echo "${{secrets.PRIVATE_SSH_KEY}}" > key
          chmod 400 key
          
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} "docker pull ${{ vars.DOCKERHUB_USERNAME }}/gsls_management_system:latest"
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} "docker stop gsls_management_system || true"
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} "docker rm gsls_management_system || true"
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} "docker run -d -p 8080:80 --restart=always --name gsls_management_system ${{ vars.DOCKERHUB_USERNAME }}/gsls_management_system:latest"
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} "docker ps"

      - name: Set Up Reverse Proxy and SSL
        run: |
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} << 'EOF'
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx

            cat << NGINX_CONF | sudo tee /etc/nginx/sites-available/gsls_management_system
            server {
                listen 80;
                server_name gslsportal.com www.gslsportal.com;

                location / {
                    proxy_pass http://127.0.0.1:8080;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                }
            }
            NGINX_CONF

            # Enable the site
            sudo ln -sf /etc/nginx/sites-available/gsls_management_system /etc/nginx/sites-enabled/

            # Obtain an SSL certificate
            sudo certbot --nginx --non-interactive --agree-tos --redirect \
              -m ayomideolalere374@gmail.com -d gslsportal.com -d www.gslsportal.com

            # Reload NGINX
            sudo nginx -t && sudo systemctl reload nginx

            # Set up automatic SSL certificate renewal
            echo "0 3 * * * root certbot renew --quiet && systemctl reload nginx" | sudo tee -a /etc/crontab
          EOF


      - name: Check Container Logs
        run: |
          ssh -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.SERVER_IP}} "docker logs gsls_management_system"
